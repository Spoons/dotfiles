#!/bin/zsh
# Written by Michael Ciociola
# License: GPLv3
# 2021-04-06



__update_tkg() {
  pushd "$1"
  print "3\n4\n" | ./TkgThingy
  popd
}

_sudo_loop() {
  # Prevent sudo timeout
  sudo -v # ask for sudo password up-front
  while true; do
    # Update user's timestamp without running a command
    sudo -nv; sleep 1m
    # Exit when the parent process is not running any more. In fact this loop
    # would be killed anyway after being an orphan(when the parent process
    # exits). But this ensures that and probably exit sooner.
    kill -0 $$ 2>/dev/null || exit
  done &
}

_update() {
  git clean -fd .

  if [[ "$1" == "true" ]]; then
    git pull --ff
  else
    git reset --hard origin/master
    git pull --ff --ff-only
  fi
}

_build() {
  eval "$1" | makepkg -si --cleanbuild --noconfirm --needed || exit
}

_main() {

  local REPOS_PATH="$HOME/build"
  local TKG_PATH="$REPOS_PATH/tkg"

  repopaths=(
    "$REPOS_PATH/grub-hook"
    "$TKG_PATH/nvidia-all"
    "$TKG_PATH/linux-tkg"
    "$TKG_PATH/wine-tkg-git/wine-tkg-git" 
    "$TKG_PATH/wine-tkg-git/proton-tkg" 
  )
  stdinput=(
    ""
    ""
#    "print \"\n\""
    "yes"
    "yes"
  )
  gitmerge=(
    "true"
    ""
#    ""
    ""
    ""
  )

  _sudo_loop
  sudo pacman --noconfirm -Syu
  # yay --noconfirm -Syua
  __update_tkg "$TKG_PATH"

  owd="$(pwd)"
  for ((i = 1; i < $#repopaths; i++)); do
    if cd "${repopaths[i]}"; then
      _update "${gitmerge[i]}"
      _build "${stdinput[i]}"
      read -r -d '' -t 0.1 -n 10000
    fi
  done

  cd "$owd"
}

_main 
