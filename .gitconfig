# vim: sw=4 ts=4 et:
[user]
	name = spoons
    email = childofunix@gmail.com
[color]
    ui = true
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = green
[alias]
    # add
    a = add 
    chunkyadd = add --patch
    au = add -u

    # via http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    snapshots = !git stash list --grep snapshot

    # via http://stackoverflow.com/questions/5188320/how-can-i-get-a-list-of-git-branches-ordered-by-most-recent-commit
    recent-branches = !git for-each-ref --count=15 --sort=-committerdate refs/heads/ --format='%(refname:short)'
    
    # branch
    b = branch -v

    # commit
    cm = commit -m          # commit with message
    c = commit            # commit
    cc = commit            # commit
    ca = commit -a
    cam = commit -am
    amend = commit --amend # ammend last commit

    # checkout
    co = checkout          # checkout
    nb = checkout -b       # create new branch and switch (git new branch)

    # diff
    d = diff               # diff unstaged changes
    dc = diff --cached     # diff staged changes
    last = diff HEAD^      # diff last commited changes

    # log
    l = log --graph --date=short
    lf = log --pretty=full
    changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
    short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
    simple = log --pretty=format:\" * %s\"
    shortnocolor = log --pretty=format:\"%h %cr %cn %s\"

    # pull
    pl = pull

    # push
    ps = push

    # remote
    r = remote -v

    # reset
    unstage = reset HEAD          # remove files from index (tracking)
    uncommit = reset --soft HEAD^ # go back before last commit, with files in uncommitted state
    filelog = log -u              # show changes to a file
    mt = mergetool                # brings up the mergetool

    # stash
    ss = stash # stash changes
    sl = stash list # stash list
    sa = stash apply
    sd = stash drop

    # status
    s = status

    # tag
    t = tag -n

    # fetch
    f = fetch --all
    fp = fetch --all --prune

[format]
    pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[diff]
    tool = nvim
    mnemonicprefix = true
[diftool]
    prompt = False
    trustExitCode = True
[merge]
    tool = nvim
    conflictstyle = diff3
[mergetool]
    prompt = False
    keepbackup = False
[mergetool "nvim"]
    cmd = nvim -f -c \"Gdiffsplit!\" \"$MERGED\"
[branch]
    autosetupmerge = true
[push]
    default = upstream
[core]
    editor = nvim
    excludesfile = ~/.gitignore
[branch "master"]
    remote = origin
[include]
    path = .gitconfig.local
[pull]
	ff = only
[init]
	defaultBranch = master
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
