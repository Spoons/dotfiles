# Author: Michael Ciociola
# License: GPLv3
# Title: Best tmux config ever

# set window indexing from 1
set -g base-index 1
set -sg escape-time 0
set -g history-limit 10000

# vi style movemes
set -g status-keys vi
setw -g mode-keys vi
set-window-option -g mode-keys vi
setw -g mouse on
setw -g monitor-activity on

# Automatically set window title
set-option -g set-titles on
set-option -ga update-environment ' GPG_AGENT_INFO'
set-window-option -g automatic-rename on

# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard" \; display-message "highlighted selection copied to system clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Check if is vim and take appropriate select pane action
bind-key -n C-h   if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j   if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k   if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l   if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\   if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Make pane switching work in visual select mode
bind-key -T copy-mode-vi C-h    select-pane -L
bind-key -T copy-mode-vi C-j    select-pane -D
bind-key -T copy-mode-vi C-k    select-pane -U
bind-key -T copy-mode-vi C-l    select-pane -R
bind-key -T copy-mode-vi C-\    select-pane -l

# Load our plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
bind-key 'Z' resize-pane -Z
bind-key 'v' split-window -h -c '#{pane_current_path}'
bind-key 's' split-window -v -c '#{pane_current_path}'
bind '%' split-window -h -c '#{pane_current_path}'                                        
bind '"' split-window -v -c '#{pane_current_path}'
bind 'c' new-window -c '#{pane_current_path}'                                                     

# Reload tmux config
bind 'r' source-file ~/.tmux.conf

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
# Status update interval
set -g status-interval 1

# Basic status bar colors
set -g status-style bg=colour236,fg=cyan

# Left side of status bar
set -g status-left-style bg=colour236,fg=green
set -g status-left-length 20
set -g status-left "#S #[fg=white]» #[fg=yellow]#I-#[fg=cyan]#P ||"

# Right side of status bar
set -g status-right-style bg=colour236,fg=cyan
set -g status-right-length 40
set -g status-right "#H #[fg=white]« #[fg=yellow]%H:%M:%S #[fg=green]%d-%b-%y"

# Window status
set -g window-status-format " #I:#W#F "
set -g window-status-current-format " #I:#W#F "

# Current window status
set -g window-status-current-style bg=red,fg=colour16

# Window with activity status
set -g window-status-activity-style bg=colour236,fg=yellow

# Window separator
set -g window-status-separator "|"

# Window status alignment
set -g status-justify left

# Pane border
set -g pane-border-style bg=default,fg=default

# Active pane border
set -g pane-active-border-style bg=default,fg=green

# Pane number indicator
set -g display-panes-colour default
set -g display-panes-active-colour default

# Clock mode
set -g clock-mode-colour red
set -g clock-mode-style 24

# Message
set -g message-style bg=default,fg=default

# Command message
set -g message-command-style bg=default,fg=default

# Mode
set -g mode-style bg=red,fg=default
#run -b '~/.tmux/plugins/tpm/tpm'

# Add truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"
# Default terminal is 256 colors
set -g default-terminal "tmux-256color"

# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clibboard
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
